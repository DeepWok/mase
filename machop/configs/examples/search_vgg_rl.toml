# basics
model = "vgg_tiny"
dataset = "cifar10_subset"
task = "cls"
 
max_epochs = 5512
batch_size = 512
learning_rate = 1e-2
accelerator = "gpu"
project = "vgg7"
seed = 42
log_every_n_steps = 5
load_name = "TinyVGG-epoch=32-val_acc=0.67.ckpt"
load_type = "pl"
 
[search.search_space]
name = "graph/quantize/mixed_precision_ptq"
 
[search.search_space.setup]
by = "name"
 
[search.search_space.seed.default.config]
name = ["integer"]
data_in_width = [16, 32]
data_in_frac_width = [2, 4, 8, 10, 12, 16]
weight_width = [16, 32]
weight_frac_width = [2, 4, 8, 10, 12, 16]
bias_width = [16, 32]
bias_frac_width = [2, 4, 8, 10, 12, 16]
 
[search.strategy]
name = "rl"
algorithm = 'ppo'
env = 'mixed_precision'
num_episodes = 1 
device = 'cuda'
total_timesteps = 1000
n_steps = 256
n_envs = 8
eval_freq = 200
save_freq = 200
save_name = 'tmp_rl'

[search.strategy.setup]
# sum_scaled_metrics = true # single objective
# direction = "maximize"
sum_scaled_metrics = false # multi objective

[search.strategy.sw_runner.basic_evaluation]
data_loader = "val_dataloader"
num_samples = 512

[search.strategy.hw_runner.average_bitwidth]
compare_to = 32 # compare to FP32

[search.strategy.metrics]
# loss.scale = 1.0
# loss.direction = "minimize"
accuracy.scale = 1.0
accuracy.direction = "maximize"
# memory_density.scale = 0.2
# memory_density.direction = "minimize"
average_bitwidth.scale = 0.2
average_bitwidth.direction = "minimize"